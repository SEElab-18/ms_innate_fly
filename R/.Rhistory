chosen = ifelse(first_visit == colour_option, 1, 0)
)
data_long
# Clear workspace
rm(list = ls())
# Load Libraries
library(tidyverse)
library(performance)
library(pavo)
library(glmmTMB)
library(DHARMa)
# Load data
data_colour_preference_stats <- read.csv("../02_data/colour_preference_rawdata.csv")
specs <- getspec("../02_data/spectra", ext = 'jaz')
# Filter non-choices
data_filtered <-
data_colour_preference_stats %>%
filter(!is.na(first_visit), !is.na(fly_species))
#### VISUAL MODELLING ####
# Model
specs <- procspec(specs, opt = 'smooth', fixneg = 'zero')
vis.specs <- vismodel(specs, visual = "musca", achromatic = "md.r1")
cat.specs <- colspace(vis.specs, space = "categorical")
# Plots
plot(specs, col = c('pink', 'goldenrod', 'grey', 'blue', 'forestgreen'), lwd = 2)
plot(cat.specs, col = c('pink', 'goldenrod', 'grey', 'blue', 'forestgreen'))
# Add HSL values to choice data
cat.specs$first_visit <- c('pink', 'yellow', 'white', 'blue', 'green')  # Create merge column
data_filtered <- merge(data_filtered, cat.specs[, c('first_visit', 'r.vec', 'h.theta', 'lum')],
by.x = 'first_visit', by.y = 'first_visit', all.x = TRUE)
# Define colour options
colour_options <- c('pink', 'yellow', 'white', 'blue', 'green')
# Expand data so each fly has one row per colour option
data_long <- data_filtered %>%
select(fly_number, fly_species, fly_sex, first_visit, h.theta, r.vec, lum) %>%
distinct() %>%
crossing(colour_option = colour_options) %>%
mutate(
chosen = ifelse(first_visit == colour_option, 1, 0)
)
data_long
# GLMMs for each species
# E. tenax
model_e_tenax <- glmmTMB(
chosen ~ h.theta + r.vec + lum + (1 | fly_number),
data = data_long %>% filter(fly_species == "E. tenax"),
family = binomial
)
# M. domestica
model_m_domestica <- glmmTMB(
chosen ~ h.theta + r.vec + lum + (1 | fly_number),
data = data_long %>% filter(fly_species == "M. domestica"),
family = binomial
)
# C. stygia
model_c_stygia <- glmmTMB(
chosen ~ h.theta + r.vec + lum + (1 | fly_number),
data = data_long %>% filter(fly_species == "C. stygia"),
family = binomial
)
# Summarise models
summary(model_e_tenax)
summary(model_m_domestica)
summary(model_c_stygia)
# Clear workspace
rm(list = ls())
# Load Libraries
library(tidyverse)
library(performance)
library(pavo)
library(glmmTMB)
library(DHARMa)
# Load data
data_colour_preference_stats <- read.csv("../02_data/colour_preference_rawdata.csv")
specs <- getspec("../02_data/spectra", ext = 'jaz')
# Filter non-choices
data_filtered <-
data_colour_preference_stats %>%
filter(!is.na(first_visit), !is.na(fly_species))
#### VISUAL MODELLING ####
# Model
specs <- procspec(specs, opt = 'smooth', fixneg = 'zero')
vis.specs <- vismodel(specs, visual = "musca", achromatic = "md.r1")
cat.specs <- colspace(vis.specs, space = "categorical")
# Plots
plot(specs, col = c('pink', 'goldenrod', 'grey', 'blue', 'forestgreen'), lwd = 2)
plot(cat.specs, col = c('pink', 'goldenrod', 'grey', 'blue', 'forestgreen'))
# Add HSL values to choice data
cat.specs$first_visit <- c('pink', 'yellow', 'white', 'blue', 'green')  # Create merge column
data_filtered <- merge(data_filtered, cat.specs[, c('first_visit', 'r.vec', 'h.theta', 'lum')],
by.x = 'first_visit', by.y = 'first_visit', all.x = TRUE)
# Define colour options
colour_options <- c('pink', 'yellow', 'white', 'blue', 'green')
# Expand data so each fly has one row per colour option
data_long <- data_filtered %>%
select(fly_number, fly_species, fly_sex, first_visit, h.theta, r.vec, lum) %>%
distinct() %>%
crossing(colour_option = colour_options) %>%
mutate(
chosen = ifelse(first_visit == colour_option, 1, 0)
)
data_long
cat.specs
# Clear workspace
rm(list = ls())
# Load Libraries
library(tidyverse)
library(performance)
library(pavo)
library(glmmTMB)
library(DHARMa)
# Load data
data_colour_preference_stats <- read.csv("../02_data/colour_preference_rawdata.csv")
specs <- getspec("../02_data/spectra", ext = 'jaz')
# Filter non-choices
data_filtered <-
data_colour_preference_stats %>%
filter(!is.na(first_visit), !is.na(fly_species))
#### VISUAL MODELLING ####
# Model
specs <- procspec(specs, opt = 'smooth', fixneg = 'zero')
vis.specs <- vismodel(specs, visual = "musca", achromatic = "md.r1")
cat.specs <- colspace(vis.specs, space = "categorical")
# Plots
plot(specs, col = c('pink', 'goldenrod', 'grey', 'blue', 'forestgreen'), lwd = 2)
plot(cat.specs, col = c('pink', 'goldenrod', 'grey', 'blue', 'forestgreen'))
# Add HSL values to choice data
cat.specs$first_visit <- c('pink', 'yellow', 'white', 'blue', 'green')  # Create merge column
# data_filtered <- merge(data_filtered, cat.specs[, c('first_visit', 'r.vec', 'h.theta', 'lum')],
#                        by.x = 'first_visit', by.y = 'first_visit', all.x = TRUE)
# Define colour options
colour_options <- c('pink', 'yellow', 'white', 'blue', 'green')
# Expand data so each fly has one row per colour option
data_long <- data_filtered %>%
select(fly_number, fly_species, fly_sex, first_visit, h.theta, r.vec, lum) %>%
distinct() %>%
crossing(colour_option = colour_options) %>%
mutate(
chosen = ifelse(first_visit == colour_option, 1, 0)
)
# Clear workspace
rm(list = ls())
# Load Libraries
library(tidyverse)
library(performance)
library(pavo)
library(glmmTMB)
library(DHARMa)
# Load data
data_colour_preference_stats <- read.csv("../02_data/colour_preference_rawdata.csv")
specs <- getspec("../02_data/spectra", ext = 'jaz')
# Filter non-choices
data_filtered <-
data_colour_preference_stats %>%
filter(!is.na(first_visit), !is.na(fly_species))
#### VISUAL MODELLING ####
# Model
specs <- procspec(specs, opt = 'smooth', fixneg = 'zero')
vis.specs <- vismodel(specs, visual = "musca", achromatic = "md.r1")
cat.specs <- colspace(vis.specs, space = "categorical")
# Plots
plot(specs, col = c('pink', 'goldenrod', 'grey', 'blue', 'forestgreen'), lwd = 2)
plot(cat.specs, col = c('pink', 'goldenrod', 'grey', 'blue', 'forestgreen'))
# Add HSL values to choice data
cat.specs$first_visit <- c('pink', 'yellow', 'white', 'blue', 'green')  # Create merge column
data_filtered <- merge(data_filtered, cat.specs[, c('first_visit', 'r.vec', 'h.theta', 'lum')],
by.x = 'first_visit', by.y = 'first_visit', all.x = TRUE)
# Define colour options
colour_options <- c('pink', 'yellow', 'white', 'blue', 'green')
# Expand data so each fly has one row per colour option
data_long <- data_filtered %>%
select(fly_number, fly_species, fly_sex, first_visit, h.theta, r.vec, lum) %>%
distinct() %>%
crossing(colour_option = colour_options) %>%
mutate(
chosen = ifelse(first_visit == colour_option, 1, 0)
)
# Merge HSL values for each colour option
cat.specs$colour_option <- cat.specs$first_visit
data_long <- left_join(data_long, cat.specs[, c('colour_option', 'r.vec', 'h.theta', 'lum')],
by = 'colour_option')
data_long
# Clear workspace
rm(list = ls())
# Load Libraries
library(tidyverse)
library(performance)
library(pavo)
library(glmmTMB)
library(DHARMa)
# Load data
data_colour_preference_stats <- read.csv("../02_data/colour_preference_rawdata.csv")
specs <- getspec("../02_data/spectra", ext = 'jaz')
# Filter non-choices
data_filtered <-
data_colour_preference_stats %>%
filter(!is.na(first_visit), !is.na(fly_species))
#### VISUAL MODELLING ####
# Process spectra and calculate visual model
specs <- procspec(specs, opt = 'smooth', fixneg = 'zero')
vis.specs <- vismodel(specs, visual = "musca", achromatic = "md.r1")
cat.specs <- colspace(vis.specs, space = "categorical")
# Plots
plot(specs, col = c('pink', 'goldenrod', 'grey', 'blue', 'forestgreen'), lwd = 2)
plot(cat.specs, col = c('pink', 'goldenrod', 'grey', 'blue', 'forestgreen'))
# Create mapping for colour labels in cat.specs
cat.specs$first_visit <- c('pink', 'yellow', 'white', 'blue', 'green')
# Define colour options
colour_options <- c('pink', 'yellow', 'white', 'blue', 'green')
# Expand data so each fly has one row per colour option, then join correct HSL values
data_long <- data_filtered %>%
select(fly_number, fly_species, fly_sex, first_visit) %>%  # do not include HSL columns here
distinct() %>%
crossing(colour_option = colour_options) %>%
mutate(
chosen = ifelse(first_visit == colour_option, 1, 0)
) %>%
left_join(
cat.specs %>%
mutate(colour_option = first_visit) %>%
select(colour_option, r.vec, h.theta, lum),
by = "colour_option"
)
# GLMMs for each species
# E. tenax
model_e_tenax <- glmmTMB(
chosen ~ h.theta + r.vec + lum + (1 | fly_number),
data = data_long %>% filter(fly_species == "E. tenax"),
family = binomial
)
# M. domestica
model_m_domestica <- glmmTMB(
chosen ~ h.theta + r.vec + lum + (1 | fly_number),
data = data_long %>% filter(fly_species == "M. domestica"),
family = binomial
)
# C. stygia
model_c_stygia <- glmmTMB(
chosen ~ h.theta + r.vec + lum + (1 | fly_number),
data = data_long %>% filter(fly_species == "C. stygia"),
family = binomial
)
# Summarise models
summary(model_e_tenax)
summary(model_m_domestica)
summary(model_c_stygia)
data_long
cat.specs
# Summarise models
summary(model_e_tenax)
library(performance)
r2(model_e_tenax)
library(MuMIn)
?r.squaredGLMM
r.squared
r.squaredGLMM(model_c_stygia)
check_singularity(model_e_tenax)
# Summarise models
summary(model_e_tenax)
# GLMMs for each species
# E. tenax
model_e_tenax <- glmmTMB(
chosen ~ h.theta + r.vec + lum + (1 | fly_number),
data = data_long %>% filter(fly_species == "E. tenax"),
family = binomial
)
# M. domestica
model_m_domestica <- glmmTMB(
chosen ~ h.theta + r.vec + lum + (1 | fly_number),
data = data_long %>% filter(fly_species == "M. domestica"),
family = binomial
)
model_e_tenax
r2(model_e_tenax)
r2(model_m_domestica)
r2(model_c_stygia)
summary(model_c_stygia)
summary(model_c_stygia)
r2(model_c_stygia)
summary(model_m_domestica)
r2(model_m_domestica)
?pavo
visdata
sensdata(vis = 'musca', plot = TRUE)
# Clear workspace
rm(list=ls())
# Libraries
library(ggplot2)
library(dplyr)
library(gridExtra)
library(tidyverse)
library(RColorBrewer)
library(patchwork)
# Data
data_colour_preference <- read.csv("../02_data/colour_preference_rawdata.csv")
#### FIRST VISITS ONLY
### Proportion of flies visiting flowers of each colour.
data_first_visit <- data_colour_preference %>%
mutate(fly_species = case_when(
fly_species == "C. stygia" ~ "Calliphora stygia",
fly_species == "E. tenax" ~ "Eristalis tenax",
fly_species == "M. domestica" ~ "Musca domestica",
TRUE ~ fly_species
)) %>%
mutate(fly_species = factor(fly_species, levels = c("Eristalis tenax", "Calliphora stygia", "Musca domestica"))) %>%
filter(!is.na(first_visit) & !is.na(fly_species) & fly_species != "Unknown") %>%
count(fly_species, first_visit) %>%
group_by(fly_species) %>%
mutate(proportion = n / sum(n))
colour_map <- c(
"yellow" = "#feed00",
"blue" = "#33b3ff",
"pink" = "#fd95d6",
"white" = "white"
)
## Bargraph - proportion of flies visiting each colour
p1 <-
ggplot(data_first_visit, aes(x = first_visit, y = proportion, fill = first_visit)) +
geom_bar(stat = "identity", position = "dodge", color = "black", alpha = 0.8) +
geom_text(aes(label = n),
position = position_dodge(width = 0.9),
vjust = -0.5,  size = 4) +
labs(
x = "Flower colour first visited",
y = "Proportion of flies visiting"
) +
#facet_wrap(~ fly_species, scales = "free_y") +
facet_grid(. ~ fly_species, scales = "fixed") +  # Arrange facets in columns
scale_fill_manual(values = colour_map) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.02, 0.74)) +
theme_minimal() +
theme(
axis.title.y = element_text(vjust = 1.8),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "none",                 # Hide legend
strip.text = element_text(face = "italic"),
#panel.border = element_rect(color = "black", fill = NA, size = 1),  # Add a black box around the plot
panel.spacing = unit(1.5, "lines"))  # Increase spacing between panels
### Proportions of flies visiting flowers of each colour by sex
# Filter data and count occurrences, then calculate proportions
data_sex_first_visit <- data_colour_preference %>%
mutate(fly_species = case_when(
fly_species == "C. stygia" ~ "Calliphora stygia",
fly_species == "E. tenax" ~ "Eristalis tenax",
fly_species == "M. domestica" ~ "Musca domestica",
TRUE ~ fly_species
)) %>%
mutate(fly_species = factor(fly_species, levels = c("Eristalis tenax", "Calliphora stygia", "Musca domestica"))) %>%
filter(!is.na(first_visit) & !is.na(fly_sex) & !is.na(fly_species) & fly_species != "Unknown") %>%
count(fly_species, fly_sex, first_visit) %>%
group_by(fly_species, fly_sex) %>%
mutate(proportion = n / sum(n))
# Create the bar graph with proportions
ggplot(data_sex_first_visit, aes(x = fly_sex, y = proportion, fill = first_visit)) +
geom_bar(stat = "identity", position = "dodge", color = "black", alpha = 0.8) +
geom_text(aes(label = n),
position = position_dodge(width = 0.9),
vjust = -0.5,  size = 10) +
scale_fill_manual(values = colour_map) +
labs(
x = "Flower first visited separated by sex",
y = "Proportion of flies visiting",
fill = "First Visit"
) +
facet_wrap(~ fly_species, scales = "free_y") +
scale_y_continuous(expand = c(0, 0), limits = c(-0.03, 0.75)) +
theme_classic() +
theme(
axis.text.x = element_text(size = 29),
axis.text.y = element_text(size = 32),
axis.title.x = element_text(size = 34, vjust = -0.5),
axis.title.y = element_text(size = 34, vjust = 1.8),
plot.title = element_text(size = 34),
strip.text = element_text(size = 32, face = "italic"),
legend.text = element_text(size = 32),
legend.title = element_text(size = 32),
legend.position = "none",
panel.border = element_rect(color = "black", fill = NA, size = 1),
panel.spacing = unit(1.5, "lines"))
### TIME TAKEN TO LAND ON EACH COLOUR
# Filtering data for time taken to land first visit
data_time_taken_to_land <- data_colour_preference %>%
mutate(fly_species = case_when(
fly_species == "C. stygia" ~ "Calliphora stygia",
fly_species == "E. tenax" ~ "Eristalis tenax",
fly_species == "M. domestica" ~ "Musca domestica",
TRUE ~ fly_species
)) %>%
mutate(fly_species = factor(fly_species, levels = c("Eristalis tenax", "Calliphora stygia", "Musca domestica"))) %>%
filter(!is.na(landing_time_1) & !is.na(first_visit) & !is.na(fly_species) & fly_species != "Unknown") %>%
filter(first_visit %in% names(colour_map)) %>%  # Keep only the colors specified in color_map
mutate(
# Convert landing_time_1 from character (minutes and seconds) to numeric (total minutes)
landing_time_1_min = as.numeric(sub("\\..*", "", landing_time_1)) +  # Extract whole minutes
(as.numeric(sub(".*\\.", "", landing_time_1)) / 60)  # Convert seconds to minutes
)
# Create the boxplot
p2 <-
ggplot(data_time_taken_to_land, aes(x = first_visit, y = landing_time_1_min, fill = first_visit)) +
geom_boxplot(colour = "black") +
geom_jitter(width = 0.2, size = 1.5, color = "black", alpha = 0.8) +
scale_fill_manual(values = colour_map) +
labs(
x = "Flower first visited",
y = "Time taken to land (min)",
fill = "Colour"
) +
#facet_wrap(~ fly_species, scales = "free_y") +
facet_grid(. ~ fly_species, scales = "fixed") +  # Arrange facets in columns
scale_y_continuous(expand = c(0, 0), limits = c(-0.5, 20.5)) +
theme_minimal() +
theme(
axis.title.y = element_text(vjust = 1.8),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text = element_blank(),
legend.position = "none",
#panel.border = element_rect(color = "black", fill = NA, size = 1),
panel.spacing = unit(1.5, "lines"))
### LANDING DURATION ON EACH COLOUR
# Filtering data to include duration for first visit
data_duration <- data_colour_preference %>%
mutate(fly_species = case_when(
fly_species == "C. stygia" ~ "Calliphora stygia",
fly_species == "E. tenax" ~ "Eristalis tenax",
fly_species == "M. domestica" ~ "Musca domestica",
TRUE ~ fly_species
)) %>%
mutate(fly_species = factor(fly_species, levels = c("Eristalis tenax", "Calliphora stygia", "Musca domestica"))) %>%
filter(!is.na(landing_duration_1) & !is.na(first_visit) & !is.na(fly_species) & fly_species != "Unknown") %>%
filter(first_visit %in% names(colour_map))  # Keep only the colors specified in color_map
# Create the boxplot
p3 <-
ggplot(data_duration, aes(x = first_visit, y = landing_duration_1, fill = first_visit)) +
geom_boxplot(colour = "black") +  # Create the boxplot with black borders
geom_jitter(width = 0.2, size = 1.5, color = "black", alpha = 0.8) +  # Add jittered points on top
scale_fill_manual(values = colour_map) +  # Apply the color map
labs(
x = "Flower first visited",
y = "Duration of visit (min)",
fill = "Colour"
) +
#facet_wrap(~ fly_species, scales = "free_y") +  # Facet by fly species
facet_grid(. ~ fly_species, scales = "fixed") +  # Arrange facets in columns
scale_y_continuous(expand = c(0, 0), limits = c(-0.5, 20.5)) +  # Ensure y-axis starts at 0 and no extra space at the bottom
theme_minimal() +
theme(
axis.title.x = element_text(vjust = -0.5),  # Increase x-axis title size
axis.title.y = element_text(vjust = 1.8),  # Increase y-axis title size
legend.position = "none",                 # Hide legend
strip.text = element_blank(),
#panel.border = element_rect(color = "black", fill = NA, size = 1),  # Add a black box around the plot
panel.spacing = unit(1.5, "lines"))  # Increase spacing between panels
p3
# Clear workspace
rm(list = ls())
# Load Libraries
library(tidyverse)
library(performance)
library(pavo)
library(glmmTMB)
library(DHARMa)
# Load data
data_colour_preference_stats <- read.csv("../02_data/colour_preference_rawdata.csv")
specs <- getspec("../02_data/spectra", ext = 'jaz')
# Filter non-choices
data_filtered <-
data_colour_preference_stats %>%
filter(!is.na(first_visit), !is.na(fly_species))
#### VISUAL MODELLING ####
# Process spectra and calculate visual model
specs <- procspec(specs, opt = 'smooth', fixneg = 'zero')
vis.specs <- vismodel(specs, visual = "musca", achromatic = "md.r1")
cat.specs <- colspace(vis.specs, space = "categorical")
# Plots
plot(specs, col = c('pink', 'goldenrod', 'grey', 'blue', 'forestgreen'), lwd = 2)
plot(cat.specs, col = c('pink', 'goldenrod', 'grey', 'blue', 'forestgreen'))
# Create mapping for colour labels in cat.specs
cat.specs$first_visit <- c('pink', 'yellow', 'white', 'blue', 'green')
# Define colour options
colour_options <- c('pink', 'yellow', 'white', 'blue', 'green')
# Expand data so each fly has one row per colour option, then join correct HSL values
data_long <- data_filtered %>%
select(fly_number, fly_species, fly_sex, first_visit) %>%  # do not include HSL columns here
distinct() %>%
crossing(colour_option = colour_options) %>%
mutate(
chosen = ifelse(first_visit == colour_option, 1, 0)
) %>%
left_join(
cat.specs %>%
mutate(colour_option = first_visit) %>%
select(colour_option, r.vec, h.theta, lum),
by = "colour_option"
)
data_long
cat.specs
specs <- getspec("../data/spectra", ext = 'jaz')
# Clear workspace
rm(list = ls())
# Load Libraries
library(tidyverse)
library(performance)
library(pavo)
library(glmmTMB)
library(DHARMa)
# Load data
data_colour_preference_stats <- read.csv("../data/colour_preference_rawdata.csv")
specs <- getspec("../data/spectra", ext = 'jaz')
