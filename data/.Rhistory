data(sleep)
sd(sleep)
library(tidyverse)
data(sleep)
str(sleep)
sd(sleep)
library(tidyverse)
sleep= c(0,2,4,5,7,8,9,10,11,12)
str(sleep)
sd(sleep)
set.seed(1)
pocket= sample(c(2,-2), 10, repl = T, prob= c(4/10, 6/10))
cumsum(pocket)[10]
set.seed(1)
pocket= sample(c(2,-2), 100, repl = T, prob= c(4/10, 6/10))
cumsum(pocket)[100]
1-pnorm(2)
1-pnorm(3.5)
1-pnorm(1.54)
(1-pnorm(1.54))*2
(1-pnorm(1.54))*2
(pnorm(-154))*2
(1-pnorm(1.54))*2
(pnorm(-154))
(1-pnorm(1.54))*2
((pnorm(-154))*2
(1-pnorm(1.54))*2
((pnorm(-154)))*2
(1-pnorm(1.54))*2
pnorm(-154*2
(1-pnorm(1.54))*2
pnorm(-154*2)
(1-pnorm(1.54))*2
pnorm(-154)*2
pnorm(-154)*2
(1-pnorm(1.54))*2
pnorm(-1.54)*2
knitr::opts_chunk$set(echo = TRUE)
unicoffee = c(0,0,0,0,0,1,1,1,2,2,2,2,3,3,3,6,7,9,10,30)
summary(unicoffee)
?cumsum
(1-pnorm(2.36))*2
pnorm(-1.54)*2
2*pt(2.36,29,lower.tail=F)
mam= c(8, 9, 3, 3, 3,)
mam= c(8,9,3,3,3,)
mam= c(8,9,3,3,3)
str(mam)
median(mam)
mam= c(8,9,3,3,3)
str(mam)
median(mam)
dim(mam)
pnorm(34.5,)
8choose3
choose(8,3)
choose(6,2)
choose(6,6)
choose(6,1)
choose(6,3)
sleepy= c(0,4,5,7,8,9,10,12,11,2)
median(sleepy)
sleepy= c(0,4,5,7,8,9,10,12,11,2)
median(sleepy-9)
sleepy= c(0,4,5,7,8,9,10,12,11,2)
median(sleepy-9)
sd(sleepy)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
install.packages(c('tidyverse', 'rmarkdown', 'metafor', 'performance', 'broom', 'styler'))
rm(list = ls())
library(tidyverse)
library(lme4)
install.packages(lme4)
umLong %>%
ggplot(mapping = aes(x = week,
y = mean,
group = group)) +
geom_point(mapping = aes(colour = group,
shape = group)) +
geom_line(mapping = aes(colour = group)) +
geom_errorbar(mapping = aes(ymin = mean-se,
ymax = mean + se,
colour = group),
width = 0.1) +
coord_cartesian(ylim = c(0,28)) +
scale_y_continuous(breaks = seq(0,28,7)) +
theme_light() +
theme(legend.title = element_blank(),
panel.grid = element_blank()) +
labs(y = "days cannabis use in\n previous 28 days")
install.packages(compute.es)
install.packages("metaDigitise")
install.packages(compute.es)
install.packages("compute.es")
?SMD
metafor::escalc('SMD', m1i = 12.1, sd1i = 0.61, n1i = 28, m2i = 11.3, sd2i = 1.02, n2i = 22
metafor::escalc('SMD', m1i = 12.1, sd1i = 0.61, n1i = 28, m2i = 11.3, sd2i = 1.02, n2i = 22
metafor::escalc('SMD', m1i = 12.1, sd1i = 0.61, n1i = 28, m2i = 11.3, sd2i = 1.02, n2i = 22)
SD = 0.61/sqrt28
SD = 0.61/sqrt28
0.61/sqrt28
0.61/sqrt*(28)
0.61/sqrt*(28)
0.61/sqrt(28)
0.61*sqrt(28)
1.02*sqrt(22)
metafor::escalc('SMD', m1i = 12.1, sd1i = 0.61*sqrt(28), n1i = 28, m2i = 11.3, sd2i = 1.02*sqrt(22), n2i = 22)
compute.es::res(r = 0.31, n = 0-27)
compute.es::res(r = 0.31, n = 27)
compute.es::res(r = 0.31, p = 0.016)
compute.es::res(r = 0.31, n = 0.016)
compute.es::res(r = 0.31, n = 27)
?metafor
metafor::escalc('ZCOR')
?metafor
?compute.es
?escalc
metafor::escalc('ZCOR', ri = 0.31, ni = 37)
metafor
?metafor
?escalc
# Libraries
library(pavo)
setwd("/Users/ecrossley/Desktop/Honours_zipfiles/01_innate_colour_preferences/03_R_code")
setwd("/Users/ecrossley/Desktop/Honours_zipfiles/01_innate_colour_preferences")
# Clear workspace
rm(list=ls())
# Libraries
library(tidyverse)
library(ggplot2)
library(dplyr)
library(gridExtra)
# Data
data <- read.csv('dualchoice_data.csv')
rm(list=ls())
# Libraries
library(tidyverse)
library(ggplot2)
library(dplyr)
library(gridExtra)
# Data
data <- read.csv("../02_raw_dataset/colour_preference_rawdata.csv")
setwd("/Users/ecrossley/Desktop/Honours_zipfiles/01_innate_colour_preferences")
# Libraries
library(tidyverse)
library(ggplot2)
library(dplyr)
library(gridExtra)
# Data
data <- read.csv("../02_raw_dataset/colour_preference_rawdata.csv")
setwd("/Users/ecrossley/Desktop/Honours_zipfiles/01_innate_colour_preferences/02_raw_dataset")
# Libraries
library(tidyverse)
library(ggplot2)
library(dplyr)
library(gridExtra)
# Data
data <- read.csv("../02_raw_dataset/colour_preference_rawdata.csv")
#### FIRST VISIT ALL TESTS COMBINED
# Process data for first visit
data_first_visit <- data %>%
mutate(fly_species = case_when(
fly_species == "c.stygia" ~ "Calliphora stygia",
fly_species == "e.tenax" ~ "Eristalis tenax",
fly_species == "m.domestica" ~ "Musca domestica",
TRUE ~ fly_species
)) %>%
# Replace empty strings in first_visit for Eristalis tenax with "C6.25"
mutate(first_visit = case_when(
fly_species == "Eristalis tenax" & first_visit == "" ~ "C6.25",
TRUE ~ first_visit  # Keep other values the same
)) %>%
mutate(first_visit = case_when(
first_visit == "C0" ~ "White flower",
first_visit == "C6.25" ~ "Small guide",
first_visit == "C25" ~ "Large guide",
first_visit == "C100" ~ "Yellow flower",
TRUE ~ first_visit
)) %>%
# Ensure first_visit is a factor with specified order
mutate(first_visit = factor(first_visit,
levels = c("White flower", "Small guide", "Large guide", "Yellow flower"))) %>%
mutate(fly_species = factor(fly_species,
levels = c("Eristalis tenax", "Calliphora stygia", "Musca domestica"))) %>%
# Remove rows with NA values in the first_visit or fly_species columns
filter(!is.na(first_visit) & !is.na(fly_species) & fly_species != "Unknown") %>%
# Count occurrences of fly species and first visit
count(fly_species, first_visit) %>%
group_by(fly_species) %>%
mutate(proportion = n / sum(n))
# Define color map for `first_visit`
color_map <- c(
"White flower" = "#bfd8c0",   # White
"Small guide" = "#bfd8c0",    # Light green
"Large guide" = "#bfd8c0",    # Medium green
"Yellow flower" = "#bfd8c0"    # Yellow
)
# Create the bar graph with proportions and display raw counts
ggplot(data_first_visit, aes(x = first_visit, y = proportion, fill = first_visit)) +
geom_bar(stat = "identity",
position = "dodge",
color = "black",
alpha = 0.9) +
geom_text(aes(label = n),           # Add raw counts as labels
position = position_dodge(width = 0.9),
vjust = -0.5, size = 11) +           # Position the labels above the bars
labs(
title = "First Visit Colour Choice",
x = "Flower first visited",
y = "Proportion of flies"
) +
facet_wrap(~ fly_species, scales = "free_y") +  # Facet by fly species
scale_y_continuous(labels = scales::number_format(accuracy = 0.01), expand = c(0, 0), limits = c(-0.0, 0.56)) +  # Keep y-axis as proportions with two decimal places
scale_fill_manual(values = color_map) +  # Use the defined color map
scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +  # Wrap the x-axis labels while keeping order
theme_classic() +
theme(
axis.text.x = element_text(size = 26),  # Size of x-axis text
axis.text.y = element_text(size = 32),   # Increase y-axis text size
axis.title.x = element_text(size = 34, vjust = -0.5),  # Increase x-axis title size
axis.title.y = element_text(size = 34, vjust = 1.8),  # Increase y-axis title size
plot.title = element_text(size = 34),    # Increase title font size
strip.text = element_text(size = 32, face = "italic"),  # Italicize facet headings
legend.text = element_text(size = 32),   # Increase font size of legend text
legend.title = element_text(size = 32),   # Increase font size of legend title
legend.position = "none",                 # Hide legend
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Add a black box around the plot
panel.spacing = unit(1.5, "lines"))  # Increase spacing between panels
# Clear workspace
rm(list=ls())
# Libraries
library(tidyverse)
library(ggplot2)
library(dplyr)
library(gridExtra)
# Data
data <- read.csv("../02_raw_dataset/colour_preference_rawdata.csv")
# Libraries
library(ggplot2)
library(dplyr)
library(gridExtra)
library(tidyverse)
library(RColorBrewer)
# Data
data <- read.csv("../02_raw_dataset/colour_preference_rawdata.csv")
# Data
data <- read.csv("../02_raw_dataset/colour_preference_rawdata.csv")
#### FIRST VISIT
data_first_visit <- data %>%
mutate(fly_species = case_when(
fly_species == "C. stygia" ~ "Calliphora stygia",
fly_species == "E. tenax" ~ "Eristalis tenax",
fly_species == "M. domestica" ~ "Musca domestica",
TRUE ~ fly_species
)) %>%
# Set the factor levels to control the order of fly species in the facets
mutate(fly_species = factor(fly_species, levels = c("Eristalis tenax", "Calliphora stygia", "Musca domestica"))) %>%
filter(!is.na(first_visit) & !is.na(fly_species) & fly_species != "Unknown") %>%
count(fly_species, first_visit) %>%
group_by(fly_species) %>%
mutate(proportion = n / sum(n))
# Define color map for `first_visit`
color_map <- c(
"yellow" = "#feed00",
"blue" = "#33b3ff",
"pink" = "#fd95d6",
"white" = "white"
)
# Create the bar graph with proportions and display raw counts, with y-axis starting at 0.0
ggplot(data_first_visit, aes(x = first_visit, y = proportion, fill = first_visit)) +
geom_bar(stat = "identity", position = "dodge", color = "black", alpha = 0.8) +  # Use 'dodge' to cluster the bars
geom_text(aes(label = n),           # Add raw counts as labels
position = position_dodge(width = 0.9),
vjust = -0.5,  size = 10) +           # Position the labels above the bars
labs(
x = "Flower colour first visited",
y = "Proportion of flies visiting"
) +
facet_wrap(~ fly_species, scales = "free_y") +  # Facet by fly species
scale_fill_manual(values = color_map) +  # Use the color map for `first_visit` values
scale_y_continuous(expand = c(0, 0), limits = c(-0.02, 0.74)) +  # Ensure y-axis starts at 0 and no extra space at the bottom
theme_classic() +
theme(
axis.text.x = element_text(size = 26),  # Size of x-axis text
axis.text.y = element_text(size = 32),   # Increase y-axis text size
axis.title.x = element_text(size = 34, vjust = -0.5),  # Increase x-axis title size
axis.title.y = element_text(size = 34, vjust = 1.8),  # Increase y-axis title size
plot.title = element_text(size = 34),    # Increase title font size
strip.text = element_text(size = 32, face = "italic"),  # Italicize facet headings
legend.text = element_text(size = 32),   # Increase font size of legend text
legend.title = element_text(size = 32),   # Increase font size of legend title
legend.position = "none",                 # Hide legend
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Add a black box around the plot
panel.spacing = unit(1.5, "lines"))  # Increase spacing between panels
# Clear workspace
rm(list=ls())
# Libraries
library(ggplot2)
library(dplyr)
library(gridExtra)
library(tidyverse)
library(RColorBrewer)
# Data
data <- read.csv("../02_raw_dataset/colour_preference_rawdata.csv")
#### First visits
### Proportion of flies visiting flowers of each colour.
data_first_visit <- data %>%
mutate(fly_species = case_when(
fly_species == "C. stygia" ~ "Calliphora stygia",
fly_species == "E. tenax" ~ "Eristalis tenax",
fly_species == "M. domestica" ~ "Musca domestica",
TRUE ~ fly_species
)) %>%
mutate(fly_species = factor(fly_species, levels = c("Eristalis tenax", "Calliphora stygia", "Musca domestica"))) %>%
filter(!is.na(first_visit) & !is.na(fly_species) & fly_species != "Unknown") %>%
count(fly_species, first_visit) %>%
group_by(fly_species) %>%
mutate(proportion = n / sum(n))
colour_map <- c(
"yellow" = "#feed00",
"blue" = "#33b3ff",
"pink" = "#fd95d6",
"white" = "white"
)
## code for bargraph, figure 4. proportion of flies visiting each colour
ggplot(data_first_visit, aes(x = first_visit, y = proportion, fill = first_visit)) +
geom_bar(stat = "identity", position = "dodge", color = "black", alpha = 0.8) +
geom_text(aes(label = n),
position = position_dodge(width = 0.9),
vjust = -0.5,  size = 10) +
labs(
x = "Flower colour first visited",
y = "Proportion of flies visiting"
) +
facet_wrap(~ fly_species, scales = "free_y") +
scale_fill_manual(values = color_map) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.02, 0.74)) +
theme_classic() +
theme(
axis.text.x = element_text(size = 26),
axis.text.y = element_text(size = 32),
axis.title.x = element_text(size = 34, vjust = -0.5),
axis.title.y = element_text(size = 34, vjust = 1.8),
plot.title = element_text(size = 34),
strip.text = element_text(size = 32, face = "italic"),
legend.text = element_text(size = 32),
legend.title = element_text(size = 32),
legend.position = "none",                 # Hide legend
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Add a black box around the plot
panel.spacing = unit(1.5, "lines"))  # Increase spacing between panels
data <- read.csv("../02_raw_dataset/colour_preference_rawdata.csv")
#### First visits
### Proportion of flies visiting flowers of each colour.
data_first_visit <- data %>%
mutate(fly_species = case_when(
fly_species == "C. stygia" ~ "Calliphora stygia",
fly_species == "E. tenax" ~ "Eristalis tenax",
fly_species == "M. domestica" ~ "Musca domestica",
TRUE ~ fly_species
)) %>%
mutate(fly_species = factor(fly_species, levels = c("Eristalis tenax", "Calliphora stygia", "Musca domestica"))) %>%
filter(!is.na(first_visit) & !is.na(fly_species) & fly_species != "Unknown") %>%
count(fly_species, first_visit) %>%
group_by(fly_species) %>%
mutate(proportion = n / sum(n))
colour_map <- c(
"yellow" = "#feed00",
"blue" = "#33b3ff",
"pink" = "#fd95d6",
"white" = "white"
)
## code for bargraph, figure 4. proportion of flies visiting each colour
ggplot(data_first_visit, aes(x = first_visit, y = proportion, fill = first_visit)) +
geom_bar(stat = "identity", position = "dodge", color = "black", alpha = 0.8) +
geom_text(aes(label = n),
position = position_dodge(width = 0.9),
vjust = -0.5,  size = 10) +
labs(
x = "Flower colour first visited",
y = "Proportion of flies visiting"
) +
facet_wrap(~ fly_species, scales = "free_y") +
scale_fill_manual(values = colour_map) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.02, 0.74)) +
theme_classic() +
theme(
axis.text.x = element_text(size = 26),
axis.text.y = element_text(size = 32),
axis.title.x = element_text(size = 34, vjust = -0.5),
axis.title.y = element_text(size = 34, vjust = 1.8),
plot.title = element_text(size = 34),
strip.text = element_text(size = 32, face = "italic"),
legend.text = element_text(size = 32),
legend.title = element_text(size = 32),
legend.position = "none",                 # Hide legend
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Add a black box around the plot
panel.spacing = unit(1.5, "lines"))  # Increase spacing between panels
## code for bargraph, figure 4. proportion of flies visiting each colour
ggplot(data_first_visit, aes(x = first_visit, y = proportion, fill = first_visit)) +
geom_bar(stat = "identity", position = "dodge", color = "black", alpha = 0.8) +
geom_text(aes(label = n),
position = position_dodge(width = 0.9),
vjust = -0.5,  size = 10) +
labs(
x = "Flower colour first visited",
y = "Proportion of flies visiting"
) +
facet_wrap(~ fly_species, scales = "free_y") +
scale_fill_manual(values = colour_map) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.02, 0.74)) +
theme_classic() +
theme(
axis.text.x = element_text(size = 26),
axis.text.y = element_text(size = 32),
axis.title.x = element_text(size = 34, vjust = -0.5),
axis.title.y = element_text(size = 34, vjust = 1.8),
plot.title = element_text(size = 34),
strip.text = element_text(size = 32, face = "italic"),
legend.text = element_text(size = 32),
legend.title = element_text(size = 32),
legend.position = "none",                 # Hide legend
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Add a black box around the plot
panel.spacing = unit(1.5, "lines"))  # Increase spacing between panels
ggsave('colours.png')
setwd("/Users/ecrossley/Desktop/Honours_zipfiles/01_innate_colour_preferences")
# Clear workspace
rm(list=ls())
# Libraries
library(ggplot2)
library(dplyr)
library(gridExtra)
library(tidyverse)
library(RColorBrewer)
# Data
data <- read.csv("../02_raw_dataset/colour_preference_rawdata.csv")
### Proportion of flies visiting flowers of each colour.
data_first_visit <- data %>%
mutate(fly_species = case_when(
fly_species == "C. stygia" ~ "Calliphora stygia",
fly_species == "E. tenax" ~ "Eristalis tenax",
fly_species == "M. domestica" ~ "Musca domestica",
TRUE ~ fly_species
)) %>%
mutate(fly_species = factor(fly_species, levels = c("Eristalis tenax", "Calliphora stygia", "Musca domestica"))) %>%
filter(!is.na(first_visit) & !is.na(fly_species) & fly_species != "Unknown") %>%
count(fly_species, first_visit) %>%
group_by(fly_species) %>%
mutate(proportion = n / sum(n))
# Libraries
library(ggplot2)
library(dplyr)
library(gridExtra)
library(tidyverse)
library(RColorBrewer)
# Data
data <- read.csv("../02_raw_dataset/colour_preference_rawdata.csv")
setwd("/Users/ecrossley/Desktop/Honours_zipfiles/01_innate_colour_preferences/02_raw_dataset")
# Libraries
library(ggplot2)
library(dplyr)
library(gridExtra)
library(tidyverse)
library(RColorBrewer)
# Data
data <- read.csv("../02_raw_dataset/colour_preference_rawdata.csv")
#### First visits
### Proportion of flies visiting flowers of each colour.
data_first_visit <- data %>%
mutate(fly_species = case_when(
fly_species == "C. stygia" ~ "Calliphora stygia",
fly_species == "E. tenax" ~ "Eristalis tenax",
fly_species == "M. domestica" ~ "Musca domestica",
TRUE ~ fly_species
)) %>%
mutate(fly_species = factor(fly_species, levels = c("Eristalis tenax", "Calliphora stygia", "Musca domestica"))) %>%
filter(!is.na(first_visit) & !is.na(fly_species) & fly_species != "Unknown") %>%
count(fly_species, first_visit) %>%
group_by(fly_species) %>%
mutate(proportion = n / sum(n))
colour_map <- c(
"yellow" = "#feed00",
"blue" = "#33b3ff",
"pink" = "#fd95d6",
"white" = "white"
)
## code for bargraph, figure 4. proportion of flies visiting each colour
ggplot(data_first_visit, aes(x = first_visit, y = proportion, fill = first_visit)) +
geom_bar(stat = "identity", position = "dodge", color = "black", alpha = 0.8) +
geom_text(aes(label = n),
position = position_dodge(width = 0.9),
vjust = -0.5,  size = 10) +
labs(
x = "Flower colour first visited",
y = "Proportion of flies visiting"
) +
facet_wrap(~ fly_species, scales = "free_y") +
scale_fill_manual(values = colour_map) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.02, 0.74)) +
theme_classic() +
theme(
axis.text.x = element_text(size = 26),
axis.text.y = element_text(size = 32),
axis.title.x = element_text(size = 34, vjust = -0.5),
axis.title.y = element_text(size = 34, vjust = 1.8),
plot.title = element_text(size = 34),
strip.text = element_text(size = 32, face = "italic"),
legend.text = element_text(size = 32),
legend.title = element_text(size = 32),
legend.position = "none",                 # Hide legend
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Add a black box around the plot
panel.spacing = unit(1.5, "lines"))  # Increase spacing between panels
